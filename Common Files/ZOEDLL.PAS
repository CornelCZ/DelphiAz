unit ZOEDLL;
{**************************************************************************}
{                                                                          }
{    This C DLL header file first (automatic) conversion generated by:     }
{    HeadConv 4.0 (c) 2000 by Bob Swart (aka Dr.Bob - www.drbob42.com)     }
{      Final Delphi-Jedi (Darth) command-line units edition                }
{                                                                          }
{    Generated Date: 27/05/2002                                            }
{    Generated Time: 14:01:35                                              }
{                                                                          }
{**************************************************************************}

interface
uses
  Windows, Wintypes, WinProcs, sysutils, uSystemUtils;

const
  ZOE_NOT_ENOUGH_MEMORY_ERROR = 3;
  ZOE_TRANSACTION_NOT_FOUND_ERROR = 2;

var
{///// for all following methods... }
{/// returnCode set to CONNECTION_ERROR - if cannot connect to terminal }
{/// returnCode must be buffer at least 512 bytes long }
{/// return true if no error occured }

  Zoe_EPoSTerminalProxy_partialrefresh : function (ipAddress : pWideChar; id : integer; neweposmodel : pWideChar; addendummodel : pWideChar; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_EPoSTerminalProxy_refresh : function (ipAddress : pWideChar; id : integer; model : pWideChar; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_EPoSTerminalProxy_createaddendummodelifable : function (ipAddress : pWideChar; id : integer; newmodel : pWideChar; addendumbuffer: pWideChar; addendumbuffersize : integer; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_parse : function(ID:integer; Model : pWideChar; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_EPoSTerminalProxy_getBusinessTransactions : function (ipAddress : pWideChar;id : integer; lastRead : pWideChar; buffer : pWideChar; bufferSize : integer; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_EPoSTerminalProxy_transactionsProcessed : function (ipAddress : pWideChar;id : integer; lastRead : pWideChar; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
//  Zoe_EPoSTerminalProxy_sessionDeclared : function (ipAddress : pWideChar; id : integer; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_EPoSTerminalProxy_pause : function (ipAddress : pWideChar; id : integer; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_EPoSTerminalProxy_runZealScript : function (ipAddress : pWideChar; id : integer; script : pChar; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_EPoSServerProxy_getTransactions : function (ipAddress : pWideChar; id : integer; buffer : pWideChar; bufferSize : integer; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_EPoSDeviceProxy_getType : function (ipAddress : pWideChar; id : integer; var buffer : integer; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_EPoSDeviceProxy_readEventLog : function (ipAddress : pWideChar; id : integer; buffer : pWideChar; bufferSize : integer; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_EPoSDeviceProxy_enableEventLogAddition : function (ipAddress : pWideChar; id : integer; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_EPoSDeviceProxy_setDefaultTestConfiguration : function (ipAddress : pWideChar; id : integer; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_EPoSDeviceProxy_print : function (ipAddress: pWideChar;
                                       const id: Integer;
                                       const port: Integer;
                                       const baudRate: Integer;
                                       const timeoutInMs: Integer;
                                       const buffer : pointer; {array of char;}
                                       const bufferSize: Integer;
                                       returnMessage: pWideChar;
                                       var returnCode: Integer) : WORDBOOL; cdecl;
  Zoe_EPoSDeviceProxy_synchroniseClock : function (ipAddress : pWideChar; id : integer; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_EPoSDeviceProxy_getPersistence : function (ipAddress : pWideChar; id : integer; buffer : pointer; maxBufferSize : integer; var usedBufferSize; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_getDataVersion : function (returnBuffer : pWideChar; bufferSize : integer; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_EPosDeviceProxy_getLastGUIDO : function (ipAddress : pWideChar; id : integer; returnBuffer : pWideChar; bufferSize : integer; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_EPosDeviceProxy_setLastGUIDO : function (ipAddress : pWideChar; id : integer; last : pWideChar; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_EPoSDeviceProxy_lockWithMessage : function (ipAddress : pWideChar; id : integer; _message : pWideChar ;returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_EPoSDeviceProxy_unlock : function (ipAddress : pWideChar; id : integer; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_EPoSDeviceProxy_isEventLogEnabled : function(ipAddress : pWideChar; id : integer; var result : WORDBOOL; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_EPoSDeviceProxy_isInSafeMode : function(ipAddress : pWideChar; id : integer; var result : WORDBOOL; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_EPoSDeviceProxy_safeMode : function (ipAddress : pWideChar; id : integer; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_EPoSDeviceProxy_reboot : function (ipAddress : pWideChar; id : integer; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;
  Zoe_EPoSTerminalProxy_getServerIPAddress : function (ipAddress : pWideChar; id : integer; returnBuffer : pWideChar; bufferSize : integer; returnMessage : pWideChar; var returnCode : integer) : WORDBOOL; cdecl;

  Zoe_EPoSDeviceProxy_printToIPPrinter : function(ipAddress: pWideChar;
                                                  const id: Integer;
                                                  printerIPAddress: pWideChar;
                                                  const printerIPPort: integer;
                                                  const timeoutInMs: integer;
                                                  const StatusCommand: pointer; {array of byte}
                                                  const StatusCommandSize: Integer;
                                                  const StatusReadyMask: Byte;
                                                  const buffer : pointer; {array of char;}
                                                  const bufferSize: Integer;
                                                  returnMessage: pWideChar;
                                                  var returnCode: Integer): WORDBOOL; cdecl;

  Zoe_EPoSTerminalProxy_getEPoSModelStatus : function(ipAddress: pWideChar;
                                                      id: integer;
                                                      var status: integer;
                                                      revisionBuffer: pWideChar;
                                                      revisionBufferSize: integer;
                                                      returnMessage: pWideChar;
                                                      var returnCode: integer): WORDBOOL; cdecl;

  Zoe_EPoSDeviceProxy_setNextAccountNumber: function(const ipAddress: pWideChar;
                                                     const id : integer;
                                                     const nextAccountNumber: pWideChar;
                                                     const returnMessage: pWideChar;
                                                     var returnCode: integer): WORDBOOL; cdecl;

  Zoe_EPoSTerminalProxy_getSoloModeUpgradePreventionReason: function(ipAddress: pWideChar;
                                                                     id: integer;
                                                                     preventionReasonReturnBuffer: pWideChar;
                                                                     bufferSizeInTChars: integer;
                                                                     returnMessage: pWideChar;
                                                                     var returnCode: integer): WORDBOOL; cdecl;

  Zoe_EPoSTerminalProxy_getTerminalCommsMode: function(ipAddress: pWideChar;
                                                       id: integer;
                                                       returnBuffer: pWideChar;
                                                       bufferSize: integer;
                                                       returnMessage: pWideChar;
                                                       var returnCode: integer): WORDBOOL; cdecl;

procedure clearmem;
procedure LoadDLL;

var
  { is DLL (dynamically) loaded already? }
  DLLLoaded: Boolean = False;

implementation

var
  SaveExit: pointer;
  DLLHandle: THandle;
  ErrorMode: Integer;

procedure NewExit; far;
begin
  ExitProc := SaveExit;
  FreeLibrary(DLLHandle)
end {NewExit};

procedure clearmem;
begin
  ExitProc := SaveExit;
  FreeLibrary(DLLHandle);
  DLLLoaded:=false;
end;

procedure LoadDLL;
  procedure LoadProc(const procname: pchar; var dest: pointer);
  begin
    dest := GetProcAddress(DLLHandle, procname);
    Assert(dest <> nil, 'Failed to load proc ' + procname + ' from ZOEDLL.DLL');
  end;
begin
  if DLLLoaded then Exit;
  ErrorMode := SetErrorMode($8000{SEM_NoOpenFileErrorBox});
  DLLHandle := LoadLibrary(PChar(uSystemUtils.GetZOEDLLPath));
  if DLLHandle >= 32 then
  begin
    SaveExit := ExitProc;
    ExitProc := @NewExit;
    LoadProc('Zoe_EPoSDeviceProxy_enableEventLogAddition', @Zoe_EPoSDeviceProxy_enableEventLogAddition);
//    LoadProc('Zoe_EPosDeviceProxy_getLastGUIDO', @Zoe_EPosDeviceProxy_getLastGUIDO);
    LoadProc('Zoe_EPoSDeviceProxy_getPersistence', @Zoe_EPoSDeviceProxy_getPersistence);
    LoadProc('Zoe_EPoSDeviceProxy_getType', @Zoe_EPoSDeviceProxy_getType);
    LoadProc('Zoe_EPoSDeviceProxy_isEventLogEnabled', @Zoe_EPoSDeviceProxy_isEventLogEnabled);
    LoadProc('Zoe_EPoSDeviceProxy_isInSafeMode', @Zoe_EPoSDeviceProxy_isInSafeMode);
    LoadProc('Zoe_EPoSDeviceProxy_lockWithMessage', @Zoe_EPoSDeviceProxy_lockWithMessage);
    LoadProc('Zoe_EPoSDeviceProxy_print', @Zoe_EPoSDeviceProxy_print);
    LoadProc('Zoe_EPoSDeviceProxy_readEventLog', @Zoe_EPoSDeviceProxy_readEventLog);
    LoadProc('Zoe_EPoSDeviceProxy_reboot', @Zoe_EPoSDeviceProxy_reboot);
    LoadProc('Zoe_EPoSDeviceProxy_safeMode', @Zoe_EPoSDeviceProxy_safeMode);
    LoadProc('Zoe_EPoSDeviceProxy_setDefaultTestConfiguration',@Zoe_EPoSDeviceProxy_setDefaultTestConfiguration);
//    LoadProc('Zoe_EPosDeviceProxy_setLastGUIDO', @Zoe_EPosDeviceProxy_setLastGUIDO);
    LoadProc('Zoe_EPoSDeviceProxy_synchroniseClock', @Zoe_EPoSDeviceProxy_synchroniseClock);
    LoadProc('Zoe_EPoSDeviceProxy_unlock', @Zoe_EPoSDeviceProxy_unlock);
    LoadProc('Zoe_EPoSServerProxy_getTransactions', @Zoe_EPoSServerProxy_getTransactions);
//    LoadProc('Zoe_EPoSTerminalProxy_sessionDeclared', @Zoe_EPoSTerminalProxy_sessionDeclared);
    LoadProc('Zoe_EPoSTerminalProxy_getBusinessTransactions', @Zoe_EPoSTerminalProxy_getBusinessTransactions);
    LoadProc('Zoe_EPoSTerminalProxy_pause', @Zoe_EPoSTerminalProxy_pause);
    LoadProc('Zoe_EPoSTerminalProxy_refresh', @Zoe_EPoSTerminalProxy_refresh);
    LoadProc('Zoe_EPoSTerminalProxy_partialRefresh', @Zoe_EPoSTerminalProxy_partialrefresh);
    LoadProc('Zoe_EPoSTerminalProxy_createAddendumModelIfAble', @Zoe_EPoSTerminalProxy_createaddendummodelifable);
    LoadProc('Zoe_EPoSTerminalProxy_runZealScript', @Zoe_EPoSTerminalProxy_runZealScript);
    LoadProc('Zoe_EPoSTerminalProxy_transactionsProcessed', @Zoe_EPoSTerminalProxy_transactionsProcessed);
    LoadProc('Zoe_getDataVersion', @Zoe_getDataVersion);
    LoadProc('Zoe_EPoSTerminalProxy_getServerIPAddress', @Zoe_EPoSTerminalProxy_getServerIPAddress);
    LoadProc('Zoe_parse', @Zoe_parse);
    LoadProc('Zoe_EPoSDeviceProxy_printToIPPrinter', @Zoe_EPoSDeviceProxy_printToIPPrinter);
    LoadProc('Zoe_EPoSTerminalProxy_getEPoSModelStatus', @Zoe_EPoSTerminalProxy_getEPoSModelStatus);
    LoadProc('Zoe_EPoSDeviceProxy_setNextAccountNumber', @Zoe_EPoSDeviceProxy_setNextAccountNumber);
    LoadProc('Zoe_EPoSTerminalProxy_getTerminalCommsMode', @Zoe_EPoSTerminalProxy_getTerminalCommsMode);
    LoadProc('Zoe_EPoSTerminalProxy_getSoloModeUpgradePreventionReason', @Zoe_EPoSTerminalProxy_getSoloModeUpgradePreventionReason);

    DLLLoaded := True;
  end
  else
  begin
    DLLLoaded := False;
    raise exception.create('ZOEDLL.PAS could not be loaded!!!');
  end;
  SetErrorMode(ErrorMode)
end {LoadDLL};

begin
end.
